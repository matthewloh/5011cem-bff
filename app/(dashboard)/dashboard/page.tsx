/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/BbTTX1hYAlE
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
import { CartesianGrid, XAxis, Line, LineChart } from "recharts";
import {
  ChartTooltipContent,
  ChartTooltip,
  ChartContainer,
} from "@/components/ui/chart";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { ChartCard } from "@/components/charts/national_epidemic/ChartCard";
import { TrendingUp } from "lucide-react";
import prisma from "@/lib/db";
import { formatDate } from "@/utils/formatters";
import DashboardVaccinationCard from "../../../components/charts/dashboard/dash-vacc";
import DashboardDeathsCard from "@/components/charts/dashboard/dash-death";
import DashboardNewCasesCard from "@/components/charts/dashboard/dash-new-cases";
import DashboardHospitalizationsCard from "@/components/charts/dashboard/dash-hospital";
import { getRangeOption, RANGE_OPTIONS } from "@/lib/rangeOptions";
import { ICUBedUtilizationRateChart } from "@/components/charts/dashboard/dash-icu-util-rate";
import { getICUBedUtilizationRate } from "./getICUBedUtilizationRate";
import { getVentilatorUtilizationRate } from "./getVentilatorUtilizationRate";
import { VentilatorUtilizationRateChart } from "@/components/charts/dashboard/dash-vent-util-rate";
import { getAverageDeaths } from "./getAverageDeaths";
import { AverageDeathsChart } from "@/components/charts/dashboard/dash-avg-deaths";
import { getAverageCases } from "./getAverageCases";
import { AverageCasesChart } from "@/components/charts/dashboard/dash-avg-cases";

function Header() {
  return (
    <header className="bg-white shadow">
      <div className="container mx-auto px-4 py-6 sm:px-6 lg:px-8">
        <h1 className="text-3xl font-bold leading-tight text-foreground">
          A Summary of COVID-19 Data in Malaysia
        </h1>
        <p className="mt-1 text-sm text-muted-foreground">
          Last updated on Friday, 10 December 2021 at 4:00pm
        </p>
      </div>
    </header>
  );
}

type DashboardChartCardProps = {
  title: string;
  description: string;
  footer?: string;
  children?: React.ReactNode;
};

function DashboardChartCard({
  title,
  description,
  footer,
  children,
}: DashboardChartCardProps) {
  return (
    <Card>
      <CardHeader>
        <CardTitle>{title}</CardTitle>
        <CardDescription>{description}</CardDescription>
      </CardHeader>
      <CardContent></CardContent>
      {footer && (
        <CardFooter>
          <div className="flex w-full items-start gap-2 text-sm">
            <div className="grid gap-2">
              <div className="flex items-center gap-2 font-medium leading-none">
                Trending up by 5.2% this month{" "}
                <TrendingUp className="h-4 w-4" />
              </div>
              <div className="flex items-center gap-2 leading-none text-muted-foreground">
                January - June 2024
              </div>
            </div>
          </div>
        </CardFooter>
      )}
    </Card>
  );
}

const CardText = {
  vaccinations: {
    title: "People Vaccinated",
    description: "A summary of the number of people vaccinated.",
    footer: "All vaccinations data",
  },
};

export default async function DashboardPage({
  searchParams: {
    avgCasesRange,
    avgCasesRangeFrom,
    avgCasesRangeTo,
    avgDeathsRange,
    avgDeathsRangeFrom,
    avgDeathsRangeTo,
    icuBedUtilizationRateRange,
    icuBedUtilizationRateRangeFrom,
    icuBedUtilizationRateRangeTo,
    ventUtilizationRateRange,
    ventUtilizationRateRangeFrom,
    ventUtilizationRateRangeTo,
  }
}: {
  searchParams: {
    avgCasesRange?: string,
    avgCasesRangeFrom?: string,
    avgCasesRangeTo?: string,
    avgDeathsRange?: string,
    avgDeathsRangeFrom?: string,
    avgDeathsRangeTo?: string,
    icuBedUtilizationRateRange?: string,
    icuBedUtilizationRateRangeFrom?: string,
    icuBedUtilizationRateRangeTo?: string,
    ventUtilizationRateRange?: string,
    ventUtilizationRateRangeFrom?: string,
    ventUtilizationRateRangeTo?: string,
  }
}) {
  // Fetch a ton of data here
  // Pass it into cases card, deaths card, testing card, vaccinations card, hospitalizations card
  // prisma.malaysiaEpidemic.aggregate({
  //   _sum: {
  //     cases_new: true,
  //     cases_import: true,
  //     cases_recovered: true,
  //     cases_active: true,
  //     cases_cluster: true,
  //     cases_unvax: true,
  //     cases_boost: true,
  //     cases_pvax: true,
  //     cases_fvax: true,
  //     // cases_0_4: true,
  //     // cases_5_11: true,
  //     // cases_12_17: true,
  //     // cases_18_29: true,
  //     // cases_30_39: true,
  //     // cases_40_49: true,
  //     // cases_50_59: true,
  //     // cases_60_69: true,
  //     // cases_70_79: true,
  //     // cases_80: true,
  //   },
  //   _count: true,
  // }),
  // Default range option
  const defaultRangeOption = RANGE_OPTIONS.from_2023_to_now;

  const avgCasesRangeOption =
    getRangeOption(
      avgCasesRange,
      avgCasesRangeFrom,
      avgCasesRangeTo,
  ) || defaultRangeOption;

  const avgDeathsRangeOption =
    getRangeOption(
      avgDeathsRange,
      avgDeathsRangeFrom,
      avgDeathsRangeTo,
    ) || defaultRangeOption;

  const icuBedUtilizationRateRangeOption =
    getRangeOption(
      icuBedUtilizationRateRange,
      icuBedUtilizationRateRangeFrom,
      icuBedUtilizationRateRangeTo,
    ) || defaultRangeOption;
  
  const ventUtilizationRateRangeOption =
    getRangeOption(
      ventUtilizationRateRange,
      ventUtilizationRateRangeFrom,
      ventUtilizationRateRangeTo,
    ) || defaultRangeOption;
  
  const [
    avgCasesData, avgDeathsData, icuBedUtilizationRateData, ventUtilizationRateData
  ] = await Promise.all([
    getAverageCases(
      avgCasesRangeOption.startDate,
      avgCasesRangeOption.endDate
    ),
    getAverageDeaths(
      avgDeathsRangeOption.startDate,
      avgDeathsRangeOption.endDate
    ),
    getICUBedUtilizationRate(
      icuBedUtilizationRateRangeOption.startDate,
      icuBedUtilizationRateRangeOption.endDate
    ),
    getVentilatorUtilizationRate(
      ventUtilizationRateRangeOption.startDate,
      ventUtilizationRateRangeOption.endDate
    ),
  ]);
  
  return (
    <div className="min-h-screen bg-muted/50">
      <Header />
      <div className="container mx-auto mt-8 h-screen w-screen">
        <main className="grid grid-flow-row-dense grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-4">
          <DashboardVaccinationCard />
          <DashboardDeathsCard />
          <DashboardHospitalizationsCard />
          <section className="col-span-2 rounded-lg bg-card p-6 shadow">
            <h2 className="mb-4 text-xl font-bold">Hospitalizations</h2>
            <div className="col-span-2 grid grid-cols-2 gap-4">
              <div>
                <p className="text-sm text-muted-foreground">
                  Daily - first dose
                </p>
                <p className="text-2xl font-bold">24,039</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">
                  Daily - second dose
                </p>
                <p className="text-2xl font-bold">33,824</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">
                  Daily - booster or third dose
                </p>
                <p className="text-2xl font-bold">469,479</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">
                  Total - first dose
                </p>
                <p className="text-2xl font-bold">51,207,496</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">
                  Total - second dose
                </p>
                <p className="text-2xl font-bold">46,674,061</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">
                  Total - booster or third dose
                </p>
                <p className="text-2xl font-bold">22,184,983</p>
              </div>
            </div>
            <a
              href="#"
              className="mt-4 block text-blue-500 hover:text-blue-700"
            >
              All vaccinations data
            </a>
          </section>
          <DashboardNewCasesCard />
          <section className="col-span-4 rounded-lg bg-white p-6 shadow">
            <h2 className="mb-4 text-xl font-bold">
              Deaths within 28 days of positive test
            </h2>
            <p className="text-sm text-muted-foreground">
              Latest data provided on 10 December 2021
            </p>
            <p className="mt-2 text-2xl font-bold">Daily: 120</p>
            <p className="mt-1 text-sm text-muted-foreground">
              Last 7 days: 831
            </p>
            <p className="mt-1 text-sm text-muted-foreground">No change</p>
            <p className="mt-1 text-sm text-muted-foreground">
              Rate per 100,000 people: 1.1
            </p>
            <a
              href="#"
              className="mt-4 block text-blue-500 hover:text-blue-700"
            >
              All deaths data
            </a>
          </section>

          <div className="col-span-3">
            <ChartCard
              title="Average New Cases by State"
              description="Comparison of average new cases by state"
              queryKey="avgCasesRange"
              selectedRangeLabel={avgCasesRangeOption.label}
            >
              <AverageCasesChart data={avgCasesData.chartData}></AverageCasesChart>
            </ChartCard>
          </div>
          <div className="col-span-3">
            <ChartCard
              title="Average New Deaths by State"
              description="Comparison of average new deaths by state"
              queryKey="avgDeathsRange"
              selectedRangeLabel={avgDeathsRangeOption.label}
            >
              <AverageDeathsChart data={avgDeathsData.chartData}></AverageDeathsChart>
            </ChartCard>
          </div>
          <div className="col-span-3">
            <ChartCard
              title="ICU Bed Utilization Rate by State"
              description="Comparison of ICU bed utilization rate by state"
              queryKey="icuBedUtilizationRateRange"
              selectedRangeLabel={icuBedUtilizationRateRangeOption.label}
            >
              <ICUBedUtilizationRateChart data={icuBedUtilizationRateData.chartData}></ICUBedUtilizationRateChart>
            </ChartCard>
          </div>
          <div className="col-span-3">
            <ChartCard
              title="Ventilator Utilization Rate by State"
              description="Comparison of ventilator utilization rate by state"
              queryKey="ventUtilizationRateRange"
              selectedRangeLabel={ventUtilizationRateRangeOption.label}
            >
              <VentilatorUtilizationRateChart data={ventUtilizationRateData.chartData}></VentilatorUtilizationRateChart>
            </ChartCard>
          </div>
        </main>
      </div>
    </div>
  );
}
